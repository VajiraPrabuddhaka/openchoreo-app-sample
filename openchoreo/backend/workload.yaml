apiVersion: openchoreo.dev/v1alpha1
kind: Workload
metadata:
  name: todo-app-backend
spec:
  owner:
    componentName: todo-app-backend
    projectName: default
  containers:
    main:
      image: docker.io/vajiraprabuddhaka/todo-manager-backend:latest
      command:
        - ./main
  endpoints:
    todo-manager-api:
      type: REST
      port: 8080
      schema:
        type: REST
        content: |
          openapi: 3.0.3
          info:
            title: Todo Management API
            description: A simple Todo/Task Management API for creating, reading, updating, and deleting todos with priority support
            version: 1.0.0
            contact:
              name: Todo API Support
          servers:
            - url: http://localhost:8080
              description: Development server
          paths:
            /health:
              get:
                tags:
                  - Health
                summary: Health check endpoint
                description: Check if the API is healthy and running
                responses:
                  '200':
                    description: API is healthy
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            status:
                              type: string
                              example: healthy
            /api/v1/todos:
              get:
                tags:
                  - Todos
                summary: Get all todos
                description: Retrieve a list of all todos
                responses:
                  '200':
                    description: List of todos retrieved successfully
                    content:
                      application/json:
                        schema:
                          type: array
                          items:
                            $ref: '#/components/schemas/Todo'
              post:
                tags:
                  - Todos
                summary: Create a new todo
                description: Create a new todo item
                requestBody:
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/CreateTodoRequest'
                responses:
                  '201':
                    description: Todo created successfully
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Todo'
                  '400':
                    description: Bad request - Invalid input data
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
            /api/v1/todos/{id}:
              get:
                tags:
                  - Todos
                summary: Get todo by ID
                description: Retrieve a specific todo by its ID
                parameters:
                  - name: id
                    in: path
                    required: true
                    description: The ID of the todo to retrieve
                    schema:
                      type: integer
                      format: int32
                      example: 1
                responses:
                  '200':
                    description: Todo retrieved successfully
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Todo'
                  '400':
                    description: Bad request - Invalid ID format
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
                  '404':
                    description: Todo not found
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
              put:
                tags:
                  - Todos
                summary: Update todo
                description: Update an existing todo by its ID
                parameters:
                  - name: id
                    in: path
                    required: true
                    description: The ID of the todo to update
                    schema:
                      type: integer
                      format: int32
                      example: 1
                requestBody:
                  required: true
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UpdateTodoRequest'
                responses:
                  '200':
                    description: Todo updated successfully
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Todo'
                  '400':
                    description: Bad request - Invalid ID format or input data
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
                  '404':
                    description: Todo not found
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
              delete:
                tags:
                  - Todos
                summary: Delete todo
                description: Delete a todo by its ID
                parameters:
                  - name: id
                    in: path
                    required: true
                    description: The ID of the todo to delete
                    schema:
                      type: integer
                      format: int32
                      example: 1
                responses:
                  '200':
                    description: Todo deleted successfully
                    content:
                      application/json:
                        schema:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Todo deleted successfully
                  '400':
                    description: Bad request - Invalid ID format
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
                  '404':
                    description: Todo not found
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
            /api/v1/todos/{id}/toggle:
              put:
                tags:
                  - Todos
                summary: Toggle todo completion status
                description: Toggle the completed status of a todo (true <-> false)
                parameters:
                  - name: id
                    in: path
                    required: true
                    description: The ID of the todo to toggle
                    schema:
                      type: integer
                      format: int32
                      example: 1
                responses:
                  '200':
                    description: Todo completion status toggled successfully
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Todo'
                  '400':
                    description: Bad request - Invalid ID format
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
                  '404':
                    description: Todo not found
                    content:
                      application/json:
                        schema:
                          $ref: '#/components/schemas/Error'
          components:
            schemas:
              Todo:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    description: Unique identifier for the todo
                    example: 1
                  title:
                    type: string
                    description: The title of the todo
                    example: "Complete project documentation"
                  description:
                    type: string
                    description: Detailed description of the todo
                    example: "Write comprehensive API documentation and usage examples"
                  completed:
                    type: boolean
                    description: Whether the todo is completed or not
                    example: false
                  priority:
                    type: string
                    enum: [low, medium, high]
                    description: Priority level of the todo
                    example: medium
                  created_at:
                    type: string
                    format: date-time
                    description: Timestamp when the todo was created
                    example: "2024-01-15T10:30:00Z"
                  updated_at:
                    type: string
                    format: date-time
                    description: Timestamp when the todo was last updated
                    example: "2024-01-15T10:30:00Z"
                required:
                  - id
                  - title
                  - completed
                  - priority
                  - created_at
                  - updated_at
              CreateTodoRequest:
                type: object
                properties:
                  title:
                    type: string
                    description: The title of the todo
                    example: "Complete project documentation"
                  description:
                    type: string
                    description: Detailed description of the todo (optional)
                    example: "Write comprehensive API documentation and usage examples"
                  completed:
                    type: boolean
                    description: Whether the todo is completed or not (optional, defaults to false)
                    example: false
                    default: false
                  priority:
                    type: string
                    enum: [low, medium, high]
                    description: Priority level of the todo (optional, defaults to medium)
                    example: medium
                    default: medium
                required:
                  - title
              UpdateTodoRequest:
                type: object
                properties:
                  title:
                    type: string
                    description: The title of the todo
                    example: "Complete project documentation"
                  description:
                    type: string
                    description: Detailed description of the todo
                    example: "Write comprehensive API documentation and usage examples"
                  completed:
                    type: boolean
                    description: Whether the todo is completed or not
                    example: false
                  priority:
                    type: string
                    enum: [low, medium, high]
                    description: Priority level of the todo
                    example: medium
                required:
                  - title
                  - completed
                  - priority
              Error:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing what went wrong
                    example: "Todo not found"
                required:
                  - error
          tags:
            - name: Health
              description: Health check operations
            - name: Todos
              description: Todo management operations
